;; Adapted from Savina benchmarks ("Big" benchmark, from BenchErl)
(letrec ((num-messages 10)
         (num-workers 2)
         (vector-foreach (lambda (f v)
                           (letrec ((loop (lambda (i)
                                            (if (< i (vector-length v))
                                                (begin
                                                  (f (vector-ref v i))
                                                  (loop (+ i 1)))
                                                'done))))
                             (loop 0))))
         (big-actor
          (a/actor "big" (id num-pings sink exp-pinger neighbors)
                 (ping (sender-id)
                       (a/send (vector-ref neighbors sender-id) pong id)
                       (a/become big-actor id num-pings sink exp-pinger neighbors))
                 (pong (sender)
                       (if (= sender exp-pinger)
                           (if (= num-pings num-messages)
                               (begin
                                 (a/send sink exit)
                                 (a/become big-actor id num-pings sink exp-pinger neighbors))
                               (let ((target (vector-ref neighbors (random (vector-length neighbors)))))
                                 (a/send target ping id)
                                 (a/become id (+ num-pings 1) sink target neighbors)))
                           (error (format "expected ~a, but received ping from ~a" exp-pinger sender))))
                 (exit () (terminate))
                 (neighbors (new-neighbors) (a/become big-actor id num-messages sink exp-pinger new-neighbors))))
         (sink-actor
          (a/actor "sink" (num-messages neighbors)
                 (exit ()
                       (if (= (+ num-messages 1) num-workers)
                           (begin
                             (vector-foreach (lambda (a) (a/send a exit)) neighbors)
                             (terminate))
                           (a/become sink-actor (+ num-messages 1) neighbors)))
                 (neighbors (new-neighbors)
                            (a/become sink-actor num-messages new-neighbors))))
         (sink (a/create sink-actor 0 #f))
         (big-actors (vector
                      (a/create big-actor 0 0 sink -1 #f)
                      (a/create big-actor 1 0 sink -1 #f))))
  (a/send sink neighbors big-actors)
  (vector-foreach (lambda (a) (a/send a neighbors big-actors)) big-actors)
  (vector-foreach (lambda (a) (a/send a pong -1)) big-actors))
